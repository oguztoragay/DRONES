import greedy
import os
from nl_hexaly3 import hexa
from nl_pyomo_model import nl_pyo
from pyomo_model import lp_pyo
from random_instance import generate
from random_instance import mprint
import ast

def run(city, time):
    a, b, c, d, e = city
    ins = generate(ndrones=a, condition=b, slot=c, charge=d, itimes=e)
    incumbent = ins2incumbent(ins, a, b, c, d, e, time)
    warm_start = incumbent2pyomo(incumbent)

def ins2incumbent(ins, a, b, c, d, e, time):
    hexa_data = [a, c, ins[0], ins[4], e, ins[2], ins[1], ins[7]]
    gen_seq = []
    gen_st = []
    gen_ct = []
    seq, st, ct = hexa(hexa_data, gen_seq, gen_st, gen_ct, time)
    # os.system('cls')
    print('Defined families in this instance:----------------------------')
    print(ins[7])
    print('The warm start sequence assignment generated by Hexaly:-------')
    print(seq)
    print('The warm start sequence start times:--------------------------')
    print(st)
    print('The warm start sequence comp. times:--------------------------')
    print(ct)
    return 0

def incumbent2pyomo(incumbent):
    return None

if __name__ == '__main__':
    fixed = [3, 'fixed', 5, 2, 5]
    SB = [3, 'SB', 10, 0.4, 4]
    SB_RS = [4, 'SB_RS', 15, 0.7, 1]
    SB_RS_LA = [5, 'SB_RS_LA', 15, 2, 5]
    run(SB_RS, 10)